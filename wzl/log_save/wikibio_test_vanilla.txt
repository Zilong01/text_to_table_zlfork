(py38_dm) wangzilong@85b1e59f837f:/workspace/wzl/datamining/text_to_table$ bash scripts/wikibio/test_vanilla.sh data/wikibio/ checkpoints/wikibio/vanilla/checkpoint_average_best-3.pt
Wrong format:
Args Namespace(col_header=False, hyp='checkpoints/wikibio/vanilla/checkpoint_average_best-3.pt.test_vanilla.out.text', row_header=True, table_name=None, tgt='data/wikibio//test.data')
Wrong format: 0 / 72731 (0.00%)
E metric:
Args Namespace(col_header=False, hyp='checkpoints/wikibio/vanilla/checkpoint_average_best-3.pt.test_vanilla.out.text', metric='E', row_header=True, table_name=None, tgt='data/wikibio//test.data')
  0%|                                                                                             | 0/72731 [00:00<?, ?it/s]scripts/eval/calc_data_f_score.py:100: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  return np.array([[calc_data_similarity(tgt, pred) for pred in pred_data] for tgt in tgt_data], dtype=np.float)
100%|███████████████████████████████████████████████████████████████████████████████| 72731/72731 [00:20<00:00, 3596.48it/s]
Row header: precision = 81.89; recall = 80.69; f1 = 79.06
Non-header cell: precision = 69.59; recall = 68.35; f1 = 67.24
c metric:
Args Namespace(col_header=False, hyp='checkpoints/wikibio/vanilla/checkpoint_average_best-3.pt.test_vanilla.out.text', metric='c', row_header=True, table_name=None, tgt='data/wikibio//test.data')
  0%|                                                                                             | 0/72731 [00:00<?, ?it/s]scripts/eval/calc_data_f_score.py:100: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  return np.array([[calc_data_similarity(tgt, pred) for pred in pred_data] for tgt in tgt_data], dtype=np.float)
100%|████████████████████████████████████████████████████████████████████████████████| 72731/72731 [03:28<00:00, 349.65it/s]
Row header: precision = 86.24; recall = 84.34; f1 = 83.71
Non-header cell: precision = 78.13; recall = 76.89; f1 = 75.62
BS-scaled metric:
Args Namespace(col_header=False, hyp='checkpoints/wikibio/vanilla/checkpoint_average_best-3.pt.test_vanilla.out.text', metric='BS-scaled', row_header=True, table_name=None, tgt='data/wikibio//test.data')
  0%|                                                                                             | 0/72731 [00:00<?, ?it/s]/home/wangzilong/anaconda3/envs/py38_dm/lib/python3.8/site-packages/transformers/tokenization_utils_base.py:1319: FutureWarning: The `max_len` attribute has been deprecated and will be removed in a future version, use `model_max_length` instead.
  warnings.warn(
/home/wangzilong/anaconda3/envs/py38_dm/lib/python3.8/site-packages/transformers/tokenization_utils_base.py:1319: FutureWarning: The `max_len` attribute has been deprecated and will be removed in a future version, use `model_max_length` instead.
  warnings.warn(
scripts/eval/calc_data_f_score.py:100: DeprecationWarning: `np.float` is a deprecated alias for the builtin `float`. To silence this warning, use `float` by itself. Doing this will not modify any behavior and is safe. If you specifically wanted the numpy scalar type, use `np.float64` here.
Deprecated in NumPy 1.20; for more details and guidance: https://numpy.org/devdocs/release/1.20.0-notes.html#deprecations
  return np.array([[calc_data_similarity(tgt, pred) for pred in pred_data] for tgt in tgt_data], dtype=np.float)
100%|███████████████████████████████████████████████████████████████████████████████| 72731/72731 [4:13:48<00:00,  4.78it/s]
Row header: precision = 92.27; recall = 92.91; f1 = 91.95
Non-header cell: precision = 78.95; recall = 78.14; f1 = 76.81